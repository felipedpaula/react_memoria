{"ast":null,"code":"var _jsxFileName = \"/app/www/felipe/react_memoria/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImg from './assets/devmemory_logo.png';\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/InfoItem';\nimport Restarticon from './svgs/restart.svg';\nimport { items } from './data/items';\nimport { GridItem } from './components/GridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playing, setPlaying] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [moveCount, setMoveCount] = useState(0);\n  const [shownCount, setShownCount] = useState(0);\n  const [gridItems, setGridItems] = useState([]);\n  useEffect(() => resetAndCreateGrid(), []);\n  const resetAndCreateGrid = () => {\n    // passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setMoveCount(0);\n    setShownCount(0);\n\n    // passo 2 - cirar o grid\n    // 2.1 - criar grid vazio\n    let tmpGrid = [];\n    for (let i = 0; i < items.length * 2; i++) tmpGrid.push({\n      item: null,\n      shown: false,\n      permanentShown: false\n    });\n\n    // 2.2 - preencher o grid\n    for (let w = 0; w < 2; w++) {\n      for (let i = 0; i < items.length; i++) {\n        let pos = -1;\n        while (pos < 0 || tmpGrid[pos].item !== null) {\n          pos = Math.floor(Math.random() * (items.length * 2));\n        }\n        tmpGrid[pos].item = i;\n      }\n    }\n\n    // 2.3 - jogar no state\n    setGridItems(tmpGrid);\n\n    // posso 3 - começa o jogo\n    setPlaying(true);\n  };\n  const handleItemClick = index => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(C.Container, {\n      children: [/*#__PURE__*/_jsxDEV(C.Info, {\n        children: [/*#__PURE__*/_jsxDEV(C.LogoLink, {\n          href: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImg,\n            width: \"200\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(C.InfoArea, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Tempo\",\n            value: \"00:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            label: \"Movimentos\",\n            value: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: Restarticon,\n          label: \"Reiniciar\",\n          onClick: resetAndCreateGrid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.GridArea, {\n        children: /*#__PURE__*/_jsxDEV(C.Grid, {\n          children: gridItems.map((item, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n            item: item,\n            onClick: () => handleItemClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"m1C2Bu7UqJb28LSh1PvI2PgpRCE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","C","logoImg","Button","InfoItem","Restarticon","items","GridItem","jsxDEV","_jsxDEV","App","_s","playing","setPlaying","timeElapsed","setTimeElapsed","moveCount","setMoveCount","shownCount","setShownCount","gridItems","setGridItems","resetAndCreateGrid","tmpGrid","i","length","push","item","shown","permanentShown","w","pos","Math","floor","random","handleItemClick","index","children","Container","Info","LogoLink","href","src","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","InfoArea","label","value","icon","onClick","GridArea","Grid","map","_c","$RefreshReg$"],"sources":["/app/www/felipe/react_memoria/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImg from './assets/devmemory_logo.png';\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/InfoItem';\nimport Restarticon from './svgs/restart.svg'\nimport { GridItemType } from './types/GridItemType';\nimport { items } from './data/items';\nimport { GridItem } from './components/GridItem';\n\nconst App = () => {\n\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [timeElapsed, setTimeElapsed] = useState<number>(0);\n  const [moveCount, setMoveCount] = useState<number>(0);\n  const [shownCount, setShownCount] = useState<number>(0);\n  const [gridItems, setGridItems] = useState<GridItemType[]>([]);\n  \n  useEffect(() => resetAndCreateGrid(), []);\n\n  const resetAndCreateGrid = () => {\n    // passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setMoveCount(0);\n    setShownCount(0);\n    \n    // passo 2 - cirar o grid\n    // 2.1 - criar grid vazio\n    let tmpGrid: GridItemType[] = [];\n    for(let i = 0; i < (items.length * 2); i++) tmpGrid.push({\n      item: null, shown: false, permanentShown: false\n    });\n\n    // 2.2 - preencher o grid\n    for (let w = 0; w < 2; w++) {\n      for(let i = 0; i < items.length; i++) {\n        let pos = -1;\n        while (pos < 0 || tmpGrid[pos].item !== null) {\n          pos = Math.floor(Math.random() * (items.length * 2));\n        } \n        tmpGrid[pos].item = i;\n      }\n    }\n\n    // 2.3 - jogar no state\n    setGridItems(tmpGrid);\n\n    // posso 3 - começa o jogo\n    setPlaying(true);\n  }\n\n  const handleItemClick = (index: number) => {\n\n  }\n\n  return (\n    <div>\n      <C.Container>\n        <C.Info>\n          <C.LogoLink href=\"\">\n            <img src={logoImg} width=\"200\" alt=\"\"/>\n          </C.LogoLink>\n\n          <C.InfoArea>\n            <InfoItem label='Tempo' value='00:00'/>\n            <InfoItem label='Movimentos' value='0'/>\n          </C.InfoArea>\n\n          <Button icon={Restarticon} label=\"Reiniciar\" onClick={resetAndCreateGrid}/>\n        </C.Info>\n        <C.GridArea>\n          <C.Grid>\n            {gridItems.map((item, index) => (\n              <GridItem\n                key={index}\n                item={item}\n                onClick={() => handleItemClick(index)}\n              />\n            ))}\n          </C.Grid>\n        </C.GridArea>\n      </C.Container>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}